import { moduleForComponent, test } from 'ember-qunit';
import hbs from 'htmlbars-inline-precompile';

moduleForComponent('error-messages', 'Integration | Component | error messages', {
  integration: true
});

test('it renders errors', function(assert) {
  // Set any properties with this.set('myProperty', 'value');
  // Handle any actions with this.on('myAction', function(val) { ... });
  this.set('errors', "Invalid");

  this.render(hbs`{{error-messages errors=errors success=success}}`);

  assert.equal(this.$('.alert-danger').text().trim(), "Invalid", 'Show errors correctly');
  assert.equal(this.$('.alert-success').text().trim(), '', 'Does not show success message when there are errors');

  //Code below is autogenerated for when component has a {{yield}}

  // Template block usage:
  // this.render(hbs`
  //   {{#error-messages}}
  //     template block text
  //   {{/error-messages}}
  // `);

  // assert.equal(this.$().text().trim(), 'template block text');
});


test('it renders success when there are no errors', function(assert) {
  this.set('success', "YAY!");

  this.render(hbs`{{error-messages errors=errors success=success}}`);

  assert.equal(this.$('.alert-danger').text().trim(), '', 'Does not show errors message when there are no errors');
  assert.equal(this.$('.alert-success').text().trim(), 'YAY!', 'Shows success message');

});

// This test does not pass, make it pass by chaning the error-message template
// test('it renders only errors message when both errors and success are passed in', function(assert) {
//   this.set('success', "YAY!");
//   this.set('errors', "Invalid");

//   this.render(hbs`{{error-messages errors=errors success=success}}`);

//   assert.equal(this.$('.alert-danger').text().trim(), "Invalid", 'Show errors correctly');
//   assert.equal(this.$('.alert-success').text().trim(), '', 'Does not show success message when there are errors');
// });
